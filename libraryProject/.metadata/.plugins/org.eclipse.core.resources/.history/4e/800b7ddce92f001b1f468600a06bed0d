package libraryProject;

import java.awt.Color;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class AddBook implements Serializable{
	
	 
public static void addBook() {
	 
    JFrame g = new JFrame("Enter Book Details");
    
    
    JLabel bNameLabel,genreLabel,priceLabel;  
    bNameLabel=new JLabel("Book Name");  
    bNameLabel.setBounds(30,15, 100,30); 
     
     
    genreLabel=new JLabel("Genre");  
    genreLabel.setBounds(30,53, 100,30); 
     
    priceLabel=new JLabel("Price");  
    priceLabel.setBounds(30,90, 100,30); 
     
    
    JTextField bNameTextField = new JTextField();
    bNameTextField.setBounds(110, 15, 200, 30);
     
    
    JTextField genreTextField=new JTextField();
    genreTextField.setBounds(110, 53, 200, 30);
    
    JTextField priceTextField=new JTextField();
    priceTextField.setBounds(110, 90, 200, 30);
             
     
    JButton btnAddBook=new JButton("Submit");
    btnAddBook.setBounds(130,130,90,25);
    btnAddBook.setBackground(Color.GREEN);
    btnAddBook.setForeground(Color.WHITE);
    btnAddBook.addActionListener(new ActionListener() {
         
        public void actionPerformed(ActionEvent e){
        
        	 
     String    bname = bNameTextField.getText();
     String   genre = genreTextField.getText();
     String   price = priceTextField.getText();
     ArrayList<BooksParameters> objlist = new ArrayList<BooksParameters>();

     
     try {
         File myObj = new File("sdemo.txt");
         Scanner myReader = new Scanner(myObj);
         
				/*
				 * while (myReader.hasNextLine()) { String data = myReader.nextLine(); //
				 * System.out.println(data); }
				 */
         
         Scanner sc = new Scanner(new File("sdemo.txt"));
         while(sc.hasNext()){
             String book_name = sc.next();
             String book_genre = sc.next();
             String book_price = sc.next();
           
           
            BooksParameters obj = new BooksParameters(book_name, book_genre, book_price);
            objlist.add(obj);
            
         }
         
         
         myReader.close();
       } catch (FileNotFoundException ej) {
         System.out.println("An error occurred.");
         ej.printStackTrace();
       }
     
    

     
     BooksParameters obj2 = new BooksParameters(bname, genre, price);
         objlist.add(obj2);
        // objlist.add(obj2);
        
         
         
			
			  FileWriter writer; 
			  try { writer = new FileWriter("sdemo.txt", true);
			  writer.write((bname) +" ");
			  writer.write((genre)+" ");
			  writer.write((price)+" "); // write new
			  writer.close(); }
			  catch (IOException e1) { // TODO
			    e1.printStackTrace(); }
			 
         
         String outputFile="serializationdemo.txt";
      // Serialize the object into a file.
         try {
             SerializationLib.doSerialize(objlist, outputFile);
         } catch (IOException ev) {
             ev.printStackTrace();
             return;
         } 
			/*
			 * AddBook m = new AddBook(); m.bname = "A"; m.genre = "B"; m.price = "11111";
			 */
         
			/*
			 * try { FileOutputStream fileOut = new FileOutputStream("books_lms.ser");
			 * ObjectOutputStream out = new ObjectOutputStream(fileOut);
			 * out.writeObject(obj);
			 * 
			 * out.close(); fileOut.close(); } catch (IOException i) { i.printStackTrace();
			 * }
			 */
			/*
			 * try {
			 * 
			 * FileWriter writer = new FileWriter("booksdata.txt", true);
			 * writer.write(bname); writer.write(genre); writer.write(price);// write new
			 * line writer.write("Good Bye!"); writer.close();
			 * 
			 * System.out.println("hello"); } catch (IOException ep) { ep.printStackTrace();
			 * }
			 */
         
       /* Connection connection = DbConnection.connect();
         
			
			 * try { int price_int = Integer.parseInt(price); Statement stmt =
			 * connection.createStatement(); stmt.executeUpdate("USE Library");
			 * stmt.executeUpdate("INSERT INTO books(book_name,book_type,price) VALUES ('"
			 * +bname+"','"+genre+"',"+price_int+")");
			 * JOptionPane.showMessageDialog(null,"Book added!"); g.dispose();
			 * 
			 * }
			 * 
			 * catch (SQLException e1) {
			 * 
			 * JOptionPane.showMessageDialog(null, e1); } catch(NumberFormatException ex) {
			 * JOptionPane.showMessageDialog(null,"Enter Price in numbers!"); }
			 */
       
        }
         
    });
                     
        g.add(priceLabel);
        g.add(btnAddBook);
        g.add(bNameLabel);
        g.add(genreLabel);
        g.add(bNameTextField);
        g.add(genreTextField);
        g.add(priceTextField);
        g.setSize(350,200);
        g.setLayout(null);
        g.setVisible(true);
        g.setLocationRelativeTo(null);
        g.setResizable(false);
                
}
}
